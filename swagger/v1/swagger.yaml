---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/what_to_discard_problems/{what_to_discard_problem_id}/comments/{comment_id}/replies":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    - name: comment_id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: list replies
      tags:
      - WhatToDiscardProblem:Comment:Reply
      operationId: getReplies
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_comment_replies
                properties:
                  what_to_discard_problem_comment_replies:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Comment"
    post:
      summary: create reply
      tags:
      - WhatToDiscardProblem:Comment:Reply
      operationId: createReply
      parameters: []
      responses:
        '401':
          description: unauthorized
        '422':
          description: unprocessable_entity
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_comment_reply
                properties:
                  what_to_discard_problem_comment_reply:
                    "$ref": "#/components/schemas/Comment"
  "/what_to_discard_problems/{what_to_discard_problem_id}/comments/{comment_id}/replies/{id}":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      description: what_to_discard_problem_id
      required: true
      schema:
        type: string
    - name: comment_id
      in: path
      description: comment_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: delete reply
      tags:
      - WhatToDiscardProblem:Comment:Reply
      operationId: deleteReply
      responses:
        '401':
          description: unauthorized
        '204':
          description: no_content
  "/what_to_discard_problems/{what_to_discard_problem_id}/comments":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: list comments
      tags:
      - WhatToDiscardProblem::Comment
      operationId: getComments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - comments
                properties:
                  comments:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Comment"
    post:
      summary: create comment
      tags:
      - WhatToDiscardProblem::Comment
      operationId: createComment
      parameters: []
      responses:
        '401':
          description: unauthorized
        '422':
          description: unprocessable_entity
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                - comment
                properties:
                  comment:
                    "$ref": "#/components/schemas/Comment"
  "/what_to_discard_problems/{what_to_discard_problem_id}/comments/{id}":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    - name: id
      in: path
      required: true
      schema:
        type: string
    delete:
      summary: Delete Comment
      tags:
      - WhatToDiscardProblem::Comment
      operationId: deleteComment
      responses:
        '401':
          description: unauthorized
        '204':
          description: no_content
  "/what_to_discard_problems/{what_to_discard_problem_id}/likes":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Create Like
      tags:
      - WhatToDiscardProblem::Like
      operationId: createLike
      responses:
        '401':
          description: not_logged_in
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  what_to_discard_problem_like:
                    type: object
                    required:
                    - myLike
                    properties:
                      myLike:
                        "$ref": "#/components/schemas/Like"
        '422':
          description: unprocessable_entity
  "/what_to_discard_problems/{what_to_discard_problem_id}/likes/{id}":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    - name: id
      in: path
      required: true
      schema:
        type: string
    delete:
      summary: Delete Like
      tags:
      - WhatToDiscardProblem::Like
      operationId: deleteLike
      responses:
        '401':
          description: not_logged_in
        '204':
          description: no_content
servers:
- url: http://murai.local:3001
components:
  schemas:
    Like:
      type: object
      required:
      - id
      - user_id
      - likable_type
      - likable_id
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        likable_type:
          type: string
        likable_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    Comment:
      type: object
      required:
      - id
      - user
      - commentable_type
      - commentable_id
      - content
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        user:
          "$ref": "#/components/schemas/User"
        parent_comment_id:
          type: integer
          nullable: true
        commentable_type:
          type: string
        commentable_id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    User:
      type: object
      required:
      - id
      - name
      - avatar_url
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        avatar_url:
          type: string
          nullable: true
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
