---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth/request":
    post:
      summary: create auth_request
      tags:
      - Auth::Request
      operationId: createAuthRequest
      parameters: []
      responses:
        '403':
          description: forbidden
        '422':
          description: unprocessable_entity
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - auth_request
              properties:
                auth_request:
                  type: object
                  required:
                  - email
                  properties:
                    email:
                      type: string
                      maxLength: 64
  "/auth/verification":
    post:
      summary: create auth_verification
      tags:
      - Auth::Verification
      operationId: createAuthVerification
      parameters: []
      responses:
        '403':
          description: forbidden
        '422':
          description: unprocessable_entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    "$ref": "#/components/schemas/Errors"
                required:
                - errors
        '204':
          description: ok
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_verification:
                    "$ref": "#/components/schemas/User"
                required:
                - auth_verification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - auth_verification
              properties:
                auth_verification:
                  type: object
                  required:
                  - token
                  properties:
                    token:
                      type: string
  "/me/withdrawal":
    post:
      summary: create user
      tags:
      - Me::Withdrawal
      operationId: withdrawUser
      responses:
        '401':
          description: unauthorized
        '422':
          description: unprocessable_entity
        '204':
          description: no_content
  "/session":
    get:
      summary: show session
      tags:
      - Session
      operationId: getSession
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - session
                properties:
                  session:
                    "$ref": "#/components/schemas/Session"
    delete:
      summary: delete session
      tags:
      - Session
      operationId: deleteSession
      responses:
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                required:
                - errors
                properties:
                  errors:
                    "$ref": "#/components/schemas/Errors"
        '204':
          description: no_content
  "/users":
    post:
      summary: create user
      tags:
      - User
      operationId: createUser
      parameters: []
      responses:
        '403':
          description: forbidden
        '422':
          description: unprocessable_entity
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                - user
                properties:
                  user:
                    "$ref": "#/components/schemas/User"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
              - name
              - avatar
              properties:
                name:
                  type: string
                  maxLength: 20
                avatar:
                  type: string
                  format: binary
  "/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - User
      operationId: getUser
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                required:
                - user
                properties:
                  user:
                    "$ref": "#/components/schemas/User"
    put:
      summary: update user
      tags:
      - User
      operationId: updateUser
      parameters: []
      responses:
        '401':
          description: unauthorized
        '422':
          description: unprocessable_entity
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                required:
                - user
                properties:
                  user:
                    "$ref": "#/components/schemas/User"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
              - name
              - avatar
              properties:
                name:
                  type: string
                  maxLength: 20
                avatar:
                  type: string
                  format: binary
                  nullable: true
    delete:
      summary: delete user
      tags:
      - User
      operationId: deleteUser
      responses:
        '401':
          description: unauthorized
        '204':
          description: no_content
  "/what_to_discard_problems/{what_to_discard_problem_id}/comments/{comment_id}/replies":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    - name: comment_id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: list replies
      tags:
      - WhatToDiscardProblem:Comment:Reply
      operationId: getWhatToDiscardProblemCommentReplies
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_comment_replies
                properties:
                  what_to_discard_problem_comment_replies:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Comment"
  "/what_to_discard_problems/{what_to_discard_problem_id}/comments":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: list comments
      tags:
      - WhatToDiscardProblem::Comment
      operationId: getComments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_comments
                properties:
                  what_to_discard_problem_comments:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Comment"
    post:
      summary: create comment
      tags:
      - WhatToDiscardProblem::Comment
      operationId: createComment
      parameters: []
      responses:
        '401':
          description: unauthorized
        '422':
          description: unprocessable_entity
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_comment
                properties:
                  what_to_discard_problem_comment:
                    "$ref": "#/components/schemas/Comment"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - what_to_discard_problem_comment
              properties:
                what_to_discard_problem_comment:
                  type: object
                  required:
                  - parent_comment_id
                  - content
                  properties:
                    parent_comment_id:
                      type: string
                      nullable: true
                    content:
                      type: string
                      maxLength: 255
  "/what_to_discard_problems/{what_to_discard_problem_id}/comments/{id}":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      required: true
      schema:
        type: string
    - name: id
      in: path
      required: true
      schema:
        type: string
    delete:
      summary: Delete Comment
      tags:
      - WhatToDiscardProblem::Comment
      operationId: deleteComment
      responses:
        '401':
          description: unauthorized
        '204':
          description: no_content
  "/what_to_discard_problems/{what_to_discard_problem_id}/likes/my_like":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      description: what_to_discard_problem_id
      required: true
      schema:
        type: string
    get:
      summary: show my_like
      tags:
      - WhatToDiscardProblem::Like::MyLike
      operationId: getWhatToDiscardProblemMyLike
      responses:
        '204':
          description: no_content
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - my_like
                properties:
                  my_like:
                    "$ref": "#/components/schemas/Like"
    post:
      summary: create my_like
      tags:
      - WhatToDiscardProblem::Like::MyLike
      operationId: createWhatToDiscardProblemMyLike
      responses:
        '401':
          description: unauthorized
        '422':
          description: unprocessable_entity
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_my_like
                properties:
                  what_to_discard_problem_my_like:
                    "$ref": "#/components/schemas/Like"
    delete:
      summary: delete my_like
      tags:
      - WhatToDiscardProblem::Like::MyLike
      operationId: deleteWhatToDiscardProblemMyLike
      responses:
        '401':
          description: unauthorized
        '204':
          description: no_content
  "/what_to_discard_problems/{what_to_discard_problem_id}/votes/my_vote":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      description: what_to_discard_problem_id
      required: true
      schema:
        type: string
    get:
      summary: show my_vote
      tags:
      - WhatToDiscardProblem::Comment::MyVote
      operationId: getWhatToDiscardProblemMyVote
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_my_vote
                properties:
                  what_to_discard_problem_my_vote:
                    "$ref": "#/components/schemas/WhatToDiscardProblemVote"
                    nullable: true
    post:
      summary: create my_like
      tags:
      - WhatToDiscardProblem::Vote::MyVote
      operationId: createWhatToDiscardProblemMyVote
      parameters: []
      responses:
        '401':
          description: unauthorized
        '422':
          description: unprocessable_entity
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_my_vote
                properties:
                  what_to_discard_problem_my_vote:
                    "$ref": "#/components/schemas/WhatToDiscardProblemVote"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - what_to_discard_problem_my_vote
              properties:
                what_to_discard_problem_my_vote:
                  type: object
                  required:
                  - tile_id
                  properties:
                    tile_id:
                      type: integer
    delete:
      summary: delete my_like
      tags:
      - WhatToDiscardProblem::Like::MyVote
      operationId: deleteWhatToDiscardProblemMyVote
      responses:
        '401':
          description: unauthorized
        '204':
          description: no_content
  "/what_to_discard_problems/{what_to_discard_problem_id}/votes/result":
    parameters:
    - name: what_to_discard_problem_id
      in: path
      description: what_to_discard_problem_id
      required: true
      schema:
        type: string
    get:
      summary: get result
      tags:
      - WhatToDiscardProblem::Vote::Result
      operationId: getWhatToDiscardProblemVoteResult
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem_vote_result
                properties:
                  what_to_discard_problem_vote_result:
                    type: array
                    items:
                      "$ref": "#/components/schemas/WhatToDiscardProblemVoteResult"
  "/what_to_discard_problems":
    get:
      summary: list what_to_discard_problems
      tags:
      - WhatToDiscardProblem
      operationId: getWhatToDiscardProblems
      parameters:
      - name: cursor
        in: query
        required: false
        description: Cursor for pagination
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: Number of items per page (max 100)
        schema:
          type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problems
                - meta
                properties:
                  what_to_discard_problems:
                    type: array
                    items:
                      "$ref": "#/components/schemas/WhatToDiscardProblem"
                  meta:
                    type: object
                    properties:
                      cursor:
                        "$ref": "#/components/schemas/CursorPagination"
    post:
      summary: create what_to_discard_problem
      tags:
      - WhatToDiscardProblem
      operationId: createWhatToDiscardProblem
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                - what_to_discard_problem
                properties:
                  what_to_discard_problem:
                    "$ref": "#/components/schemas/WhatToDiscardProblem"
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - what_to_discard_problem
              properties:
                what_to_discard_problem:
                  type: object
                  required:
                  - round
                  - turn
                  - wind
                  - dora_id
                  - point_east
                  - point_south
                  - point_west
                  - point_north
                  - hand1_id
                  - hand2_id
                  - hand3_id
                  - hand4_id
                  - hand5_id
                  - hand6_id
                  - hand7_id
                  - hand8_id
                  - hand9_id
                  - hand10_id
                  - hand11_id
                  - hand12_id
                  - hand13_id
                  - tsumo_id
                  properties:
                    round:
                      type: string
                      minLength: 2
                      maxLength: 2
                    turn:
                      type: string
                    wind:
                      type: string
                      minLength: 1
                      maxLength: 1
                    dora_id:
                      type: string
                    point_east:
                      type: string
                    point_south:
                      type: string
                    point_west:
                      type: string
                    point_north:
                      type: string
                    hand1_id:
                      type: string
                    hand2_id:
                      type: string
                    hand3_id:
                      type: string
                    hand4_id:
                      type: string
                    hand5_id:
                      type: string
                    hand6_id:
                      type: string
                    hand7_id:
                      type: string
                    hand8_id:
                      type: string
                    hand9_id:
                      type: string
                    hand10_id:
                      type: string
                    hand11_id:
                      type: string
                    hand12_id:
                      type: string
                    hand13_id:
                      type: string
                    tsumo_id:
                      type: string
  "/what_to_discard_problems/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: delete what_to_discard_problem
      tags:
      - WhatToDiscardProblem
      operationId: deleteWhatToDiscardProblem
      responses:
        '401':
          description: unauthorized
servers:
- url: http://murai.local:3001
components:
  schemas:
    Like:
      type: object
      required:
      - id
      - likable_type
      - likable_id
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        likable_type:
          type: string
        likable_id:
          type: integer
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    Comment:
      type: object
      required:
      - id
      - user
      - replies_count
      - commentable_type
      - commentable_id
      - content
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        user:
          "$ref": "#/components/schemas/User"
        parent_comment_id:
          type: integer
          nullable: true
        replies_count:
          type: integer
        commentable_type:
          type: string
        commentable_id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    User:
      type: object
      required:
      - id
      - name
      - avatar_url
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        avatar_url:
          type: string
          nullable: true
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    WhatToDiscardProblemVote:
      type: object
      required:
      - id
      - user_id
      - what_to_discard_problem_id
      - tile
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        what_to_discard_problem_id:
          type: integer
        tile:
          "$ref": "#/components/schemas/Tile"
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    WhatToDiscardProblem:
      type: object
      required:
      - id
      - user
      - round
      - turn
      - wind
      - point_east
      - point_south
      - point_west
      - point_north
      - dora_id
      - hand1_id
      - hand2_id
      - hand3_id
      - hand4_id
      - hand5_id
      - hand6_id
      - hand7_id
      - hand8_id
      - hand9_id
      - hand10_id
      - hand11_id
      - hand12_id
      - hand13_id
      - tsumo_id
      - comments_count
      - likes_count
      - votes_count
      - created_at
      - updated_at
      - is_liked_by_me
      - my_vote_tile_id
      properties:
        id:
          type: integer
        user:
          "$ref": "#/components/schemas/User"
        round:
          type: string
        turn:
          type: integer
        wind:
          type: string
        point_east:
          type: integer
        point_south:
          type: integer
        point_west:
          type: integer
        point_north:
          type: integer
        dora_id:
          type: integer
        hand1_id:
          type: integer
        hand2_id:
          type: integer
        hand3_id:
          type: integer
        hand4_id:
          type: integer
        hand5_id:
          type: integer
        hand6_id:
          type: integer
        hand7_id:
          type: integer
        hand8_id:
          type: integer
        hand9_id:
          type: integer
        hand10_id:
          type: integer
        hand11_id:
          type: integer
        hand12_id:
          type: integer
        hand13_id:
          type: integer
        tsumo_id:
          type: integer
        comments_count:
          type: integer
        likes_count:
          type: integer
        votes_count:
          type: integer
        is_liked_by_me:
          type: boolean
        my_vote_tile_id:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    WhatToDiscardProblem_NoRel:
      type: object
      required:
      - user_id
      - round
      - turn
      - wind
      - point_east
      - point_south
      - point_west
      - point_north
      - dora_id
      - hand1_id
      - hand2_id
      - hand3_id
      - hand4_id
      - hand5_id
      - hand6_id
      - hand7_id
      - hand8_id
      - hand9_id
      - hand10_id
      - hand11_id
      - hand12_id
      - hand13_id
      - tsumo_id
      - comments_count
      - likes_count
      - votes_count
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        user_id:
          type: integer
        round:
          type: string
        turn:
          type: integer
        wind:
          type: string
        point_east:
          type: integer
        point_south:
          type: integer
        point_west:
          type: integer
        point_north:
          type: integer
        dora_id:
          type: integer
        hand1_id:
          type: integer
        hand2_id:
          type: integer
        hand3_id:
          type: integer
        hand4_id:
          type: integer
        hand5_id:
          type: integer
        hand6_id:
          type: integer
        hand7_id:
          type: integer
        hand8_id:
          type: integer
        hand9_id:
          type: integer
        hand10_id:
          type: integer
        hand11_id:
          type: integer
        hand12_id:
          type: integer
        hand13_id:
          type: integer
        tsumo_id:
          type: integer
        comments_count:
          type: integer
        likes_count:
          type: integer
        votes_count:
          type: integer
        is_liked_by_me:
          type: boolean
        my_vote_tile_id:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    WhatToDiscardProblemVoteResult:
      type: object
      required:
      - tile_id
      - count
      properties:
        tile_id:
          type: integer
        count:
          type: integer
        is_voted_bys_me:
          type: boolean
    Tile:
      type: object
      required:
      - id
      - suit
      - ordinal_number_in_suit
      - name
      - created_at
      - updated_at
      properties:
        id:
          type: integer
        suit:
          type: string
        ordinal_number_in_suit:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date_time
        updated_at:
          type: string
          format: date_time
    Errors:
      type: array
      items:
        type: object
        required:
        - message
        properties:
          message:
            type: string
    Pagination:
      type: object
      required:
      - total_pages
      - current_page
      - prev_page
      - next_page
      - first_page
      - last_page
      properties:
        total_pages:
          type: integer
        current_page:
          type: integer
        prev_page:
          type: integer
          nullable: true
        next_page:
          type: integer
          nullable: true
        first_page:
          type: integer
        last_page:
          type: integer
    CursorPagination:
      type: object
      required:
      - has_next
      - limit
      properties:
        next:
          type: integer
          nullable: true
        has_next:
          type: boolean
        limit:
          type: integer
    Session:
      type: object
      required:
      - is_logged_in
      - user_id
      properties:
        is_logged_in:
          type: boolean
        user_id:
          type: integer
          nullable: true
